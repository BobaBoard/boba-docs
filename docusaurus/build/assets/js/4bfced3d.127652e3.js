"use strict";(self.webpackChunkbobadocs=self.webpackChunkbobadocs||[]).push([[8438],{5318:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var i=r(7378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),u=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return r?i.createElement(h,a(a({ref:t},p),{},{components:r})):i.createElement(h,a({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,a[1]=l;for(var u=2;u<o;u++)a[u]=r[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2148:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=r(5773),n=(r(7378),r(5318));const o={sidebar_position:1},a="Minimize Editor",l={unversionedId:"product/WIPs/minimize-editor",id:"product/WIPs/minimize-editor",title:"Minimize Editor",description:"GitHub Issue",source:"@site/docs/product/WIPs/minimize-editor.md",sourceDirName:"product/WIPs",slug:"/product/WIPs/minimize-editor",permalink:"/docs/product/WIPs/minimize-editor",draft:!1,editUrl:"https://github.com/essential-randomness/bobadocs/edit/main/docs/product/WIPs/minimize-editor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"product",previous:{title:"Notifications",permalink:"/docs/product/features/notifications"},next:{title:'"Native" Gif Search',permalink:"/docs/product/WIPs/extensible-dropdown"}},s={},u=[{value:"Summary",id:"summary",level:2},{value:"Use Cases",id:"use-cases",level:3},{value:"Open Questions",id:"open-questions",level:3},{value:"What&#39;s Already Implemented",id:"whats-already-implemented",level:3},{value:"Prior Art",id:"prior-art",level:3}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"minimize-editor"},"Minimize Editor"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/BobaBoard/issues/issues/51"},"GitHub Issue")),(0,n.kt)("h2",{id:"summary"},"Summary"),(0,n.kt)("p",null,'The only way to exit the "new thread/contrib/comment" modal is to either post or delete what\'s being typed. We want to start a draft, be able to temporarily minimize the editor, move around the thread, then pick things back up from where we left.'),(0,n.kt)("h3",{id:"use-cases"},"Use Cases"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Re-read what you were replying to as you're composing your thoughts"),(0,n.kt)("li",{parentName:"ul"},"Copy/paste quotes from around the thread into your reply")),(0,n.kt)("h3",{id:"open-questions"},"Open Questions"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"How do we visually indicate to the user that there's a draft in progress?")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"How do we visually indicate what the current draft is replying to (or where it will fit in the thread)?")," What happens if the user changes thread display format? What if e.g. the contribution they're replying to is filtered out with the sidebar filters?",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'If we give the user the ability to easily "go back to what your current draft is replying to", which seems reasonable, how do we account for the above cases?'))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Do we want to be able to move outside the thread?"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"From a technical standpoint, I don't foresee this being significantly more difficult than the regular case."),(0,n.kt)("li",{parentName:"ul"},"From a UX standpoint, I imagine it would create a lot more edge cases. Experimenting with the single-thread case first would be the best course of action IMO."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Potential use cases:")," pulling quotes/content from other threads/boards into your current contribution."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"What happens if the user tries to reply to something else while ?")," Can you move what you've typed to a different contrib/comment?"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Are there things we want to build in the future that might conflict with this features?"),' Off the top of my mind, no. Actually, it will be a great way to make the "quote comment in contribution" flow work better once we have it.')),(0,n.kt)("h3",{id:"whats-already-implemented"},"What's Already Implemented"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'There already is an unused "minimize" button in contributions (',(0,n.kt)("a",{parentName:"li",href:"https://bobaboard-ui.netlify.app/?path=/story/post-editor--editable-with-footer"},"link"),'), but we aren\'t "married" to the design.')),(0,n.kt)("h3",{id:"prior-art"},"Prior Art"),(0,n.kt)("p",null,"The only social netwrok software I can think of with a similar function is Discourse."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"They allow you to minimize the editor and navigate anywhere in their software (AFAICT)."),(0,n.kt)("li",{parentName:"ul"},"They do not have any special indicator on the post that is being replied to, but have a link to it on top of their editor. Clicking the link will load that post/thread.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For posts without a title, it just marks the name of the person you're replying to. If they feature more than once in a thread, there's no specific distinction in that case."))),(0,n.kt)("li",{parentName:"ul"},"Clicking on another reply button will immediately mark your current draft as replying to the new post."),(0,n.kt)("li",{parentName:"ul"},'Selecting text on any post brings up a "quote" callout, which will copy the text into your editor when clicked.')),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://blog.discourse.org/assets/2016/04/discourse-mobile-editor-v15.png",alt:"Discourse Interface"})))}c.isMDXComponent=!0}}]);